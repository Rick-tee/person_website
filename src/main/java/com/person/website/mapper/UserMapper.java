package com.person.website.mapper;

import com.person.website.pojo.User;
import org.apache.ibatis.annotations.Param;

import java.util.Date;
import java.util.List;

public interface UserMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbggenerated Thu Oct 28 17:42:58 CST 2021
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbggenerated Thu Oct 28 17:42:58 CST 2021
     */
    int insert(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbggenerated Thu Oct 28 17:42:58 CST 2021
     */
    int insertSelective(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbggenerated Thu Oct 28 17:42:58 CST 2021
     */
    User selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbggenerated Thu Oct 28 17:42:58 CST 2021
     */
    int updateByPrimaryKeySelective(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbggenerated Thu Oct 28 17:42:58 CST 2021
     */
    int updateByPrimaryKeyWithBLOBs(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbggenerated Thu Oct 28 17:42:58 CST 2021
     */
    int updateByPrimaryKey(User record);

    User selectUserByPhone(String phone);

    User selectUserByEmail(String email);

    User selectUserByEmailAndPwd(@Param("email") String userInfo, @Param("password") String password);

    User selectUserByPhoneAndPwd(@Param("phone") String userInfo,@Param("password") String password);

    int insertAvatar(@Param("userId") String userId, @Param("fileName") String fileName);

    User selectByUserId(String userId);

    int updateUserInfoByUserId(@Param("userId") String userId,@Param("userName") String userName,@Param("userSex") String sex,@Param("phone") String phone,@Param("email") String email,@Param("province") String province,@Param("city") String city,@Param("county") String county,@Param("address") String address,@Param("leftWish") String leftWish,@Param("rightWhisper") String rightWhisper,@Param("upTime") Date upTime,@Param("ip") String ip);

    int updatePasswordByUserId(@Param("userId") String userId, @Param("password") String password);

    /**
     * 根据用户id 更新数据
     * @param user 用户信息
     * @return 返回影响记录数
     */
    int updateUserSelectiveByUserId(User user);

    /**
     * 查询所有用户信息
     * @return 返回list集合
     */
    List<User> selectUserAll();

    /**
     * 根据用户id删除数据
     * @param userId 用户id
     * @return 返回影响记录数
     */
    int deleteByUserId(String userId);
}